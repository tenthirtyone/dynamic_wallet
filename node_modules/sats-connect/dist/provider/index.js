"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getProviderById = exports.getProviders = exports.getProviderOrThrow = void 0;
async function getProviderOrThrow(getProvider) {
    const provider = (await getProvider?.()) || window.XverseProviders?.BitcoinProvider || window.BitcoinProvider;
    if (!provider) {
        throw new Error('No Bitcoin wallet installed');
    }
    return provider;
}
exports.getProviderOrThrow = getProviderOrThrow;
function getProviders() {
    if (!window.webbtc_providers)
        window.webbtc_providers = [];
    return window.webbtc_providers;
}
exports.getProviders = getProviders;
function getProviderById(providerId) {
    if (Array.isArray(window.webbtc_providers)) {
        const provider = window.webbtc_providers.find((provider) => provider.id === providerId);
        return provider?.id?.split('.').reduce((acc, part) => acc?.[part], window);
    }
    else {
        console.log('window.webbtc_providers is not defined or not an array');
        return undefined;
    }
}
exports.getProviderById = getProviderById;
__exportStar(require("./types"), exports);
//# sourceMappingURL=index.js.map