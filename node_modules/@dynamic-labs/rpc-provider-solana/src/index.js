'use client'
import { Connection } from '@solana/web3.js';
import { ChainRpcProviders, ProviderChain } from '@dynamic-labs/rpc-providers';
export * from '@dynamic-labs/rpc-providers';

/* eslint-disable @typescript-eslint/no-namespace */
ChainRpcProviders.getSolanaRpcProviderByChainId = (config, chainId) => {
    var _a;
    const rpcProviders = ChainRpcProviders.getProviders(config);
    const provider = (_a = rpcProviders['solana']) === null || _a === void 0 ? void 0 : _a.find((rpcProvider) => rpcProvider.chainId === chainId);
    return provider;
};
ChainRpcProviders.registerSolanaProviders = () => {
    ChainRpcProviders.registerChainProviders(ProviderChain.SOLANA, (config) => {
        const rpcProviders = {};
        if (config === null || config === void 0 ? void 0 : config.solana) {
            rpcProviders.solana = config.solana.map((network) => {
                var _a;
                const rpcUrl = ((_a = network.privateCustomerRpcUrls) === null || _a === void 0 ? void 0 : _a[0]) || network.rpcUrls[0];
                const provider = new Connection(rpcUrl);
                return {
                    chainId: network.chainId.toString(),
                    chainName: network.name,
                    provider,
                };
            });
        }
        return rpcProviders.solana;
    });
};
