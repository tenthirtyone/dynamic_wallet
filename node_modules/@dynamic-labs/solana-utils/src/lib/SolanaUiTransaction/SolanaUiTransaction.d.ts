import { Connection, Transaction, VersionedTransaction } from '@solana/web3.js';
import { IUITransaction, IUITransactionFormatOptions } from '@dynamic-labs/types';
export declare const LAMPORTS_PER_SOL = 1000000000;
type SolanaUiTransactionProps = {
    from: string;
    connection: Connection;
    onSubmit: (transaction: Transaction | VersionedTransaction) => Promise<string>;
    originalTransaction?: Transaction | VersionedTransaction;
};
export declare class SolanaUiTransaction implements IUITransaction {
    to: string | undefined;
    from: string;
    value: bigint | undefined;
    chain: string;
    receipt: string | undefined;
    data: undefined;
    fee: {
        gas: bigint | undefined;
    };
    originalTransaction: Transaction | VersionedTransaction | undefined;
    private onSubmit;
    private connection;
    constructor({ onSubmit, from, connection, originalTransaction, }: SolanaUiTransactionProps);
    parse(input: string): bigint;
    format(value: bigint, { precision }?: IUITransactionFormatOptions): string;
    submit(): Promise<string>;
    getBalance(): Promise<bigint>;
    validateAddressFormat(address: string): boolean;
    fetchFee(): Promise<void>;
    private createTransaction;
    private createTransactionSafe;
}
export {};
