import { Wallet } from '@wallet-standard/base';
import { StandardConnectFeature, StandardDisconnectFeature } from '@wallet-standard/features';
import { Chain } from '@dynamic-labs/wallet-connector-core';
import { WalletBookSchema } from '@dynamic-labs/wallet-book';
import { SolWalletConnector, SolWalletConnectorOpts } from './../solWalletConnector';
import { ISolana } from './../types';
export declare abstract class SolanaWalletStandardConnector extends SolWalletConnector {
    connectedChain: Chain;
    supportedChains: Chain[];
    constructor(props: SolWalletConnectorOpts);
    get wallet(): Wallet;
    get walletFeatures(): StandardConnectFeature & StandardDisconnectFeature;
    connect(): Promise<void>;
    endSession(): Promise<void>;
    isInstalledOnBrowser(): boolean;
    getAddress(): Promise<string | undefined>;
    getConnectedAccounts(): Promise<string[]>;
    signMessage(messageToSign: string): Promise<string | undefined>;
    getSigner(): Promise<ISolana | undefined>;
    static getWallet(walletBook: WalletBookSchema, walletKey: string): Wallet | undefined;
}
