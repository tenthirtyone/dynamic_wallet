'use client'
import { __awaiter } from '../_virtual/_tslib.js';
import { findWalletBookWallet } from '@dynamic-labs/wallet-book';
import { isMobile } from '@dynamic-labs/utils';
import { SolWalletConnector } from './solWalletConnector.js';
import { PhantomRedirect } from './phantomRedirect/PhantomRedirect.js';
import { PhantomInjected } from './injected/PhantomInjected.js';

class Phantom extends SolWalletConnector {
    constructor(opts) {
        super(opts);
        this.name = 'Phantom';
        this.overrideKey = 'phantom';
        this.wallet = findWalletBookWallet(this.walletBook, this.key);
    }
    connect() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.getMobileOrInstalledWallet().connect();
        });
    }
    getSigner() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.getMobileOrInstalledWallet().getSigner();
        });
    }
    getMobileOrInstalledWallet() {
        const phantomInjected = new PhantomInjected(this.constructorProps);
        if (!isMobile() || phantomInjected.isInstalledOnBrowser()) {
            return phantomInjected;
        }
        if (this.constructorProps.mobileExperience === 'redirect') {
            return new PhantomRedirect(this.constructorProps);
        }
        else {
            return new PhantomInjected(this.constructorProps);
        }
    }
}

export { Phantom };
