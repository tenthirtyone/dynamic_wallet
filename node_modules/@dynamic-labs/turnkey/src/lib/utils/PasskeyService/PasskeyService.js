'use client'
import { createTurnkeyPasskeyService } from './utils/createTurnkeyPasskeyService/createTurnkeyPasskeyService.js';

class PasskeyService {
    /**
     * Gets the current passkey service implementation.
     * If no implementation is set, it will create a new turnkey passkey service.
     * @returns {IPasskeyService} The passkey service implementation.
     */
    static get implementation() {
        if (!PasskeyService._implementation) {
            return createTurnkeyPasskeyService();
        }
        return PasskeyService._implementation;
    }
    /**
     * Sets the passkey service implementation.
     * @param {IPasskeyService} implementation The passkey service implementation to set.
     */
    static setImplementation(implementation) {
        PasskeyService._implementation = implementation;
    }
    /**
     * Gets the WebAuthn attestation method from the current implementation.
     */
    static get getWebAuthnAttestation() {
        return PasskeyService.implementation.getWebAuthnAttestation;
    }
    /**
     * Gets the createWebauthnStamper method from the current implementation.
     */
    static get createWebauthnStamper() {
        return PasskeyService.implementation.createWebauthnStamper;
    }
}

export { PasskeyService };
