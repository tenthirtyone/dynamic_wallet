import { IPasskeyService } from './types';
export declare class PasskeyService {
    static _implementation: IPasskeyService;
    /**
     * Gets the current passkey service implementation.
     * If no implementation is set, it will create a new turnkey passkey service.
     * @returns {IPasskeyService} The passkey service implementation.
     */
    static get implementation(): IPasskeyService;
    /**
     * Sets the passkey service implementation.
     * @param {IPasskeyService} implementation The passkey service implementation to set.
     */
    static setImplementation(implementation: IPasskeyService): void;
    /**
     * Gets the WebAuthn attestation method from the current implementation.
     */
    static get getWebAuthnAttestation(): typeof import("@turnkey/http").getWebAuthnAttestation;
    /**
     * Gets the createWebauthnStamper method from the current implementation.
     */
    static get createWebauthnStamper(): (config: import("@turnkey/webauthn-stamper").TWebauthnStamperConfig) => import("@turnkey/webauthn-stamper").WebauthnStamper;
}
