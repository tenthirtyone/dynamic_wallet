'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _tslib = require('../../../_virtual/_tslib.cjs');
var BitcoinWalletConnector = require('../BitcoinWalletConnector.cjs');

class FallbackBitcoinConnector extends BitcoinWalletConnector.BitcoinWalletConnector {
    constructor(opts) {
        super(Object.assign(Object.assign({}, opts), { overrideKey: 'fallbackconnector' }));
        this.name = 'Fallback Connector';
        this.overrideKey = 'fallbackconnector';
        this.isAvailable = false;
        this.canFetchConnectedAccounts = false;
    }
    getAddress() {
        return _tslib.__awaiter(this, void 0, void 0, function* () {
            return;
        });
    }
    signPsbt(
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    _request) {
        return _tslib.__awaiter(this, void 0, void 0, function* () {
            return;
        });
    }
    sendBitcoin(
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    _transaction) {
        return _tslib.__awaiter(this, void 0, void 0, function* () {
            return;
        });
    }
}

exports.FallbackBitcoinConnector = FallbackBitcoinConnector;
