'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var BitcoinWalletConnector = require('./connectors/BitcoinWalletConnector.cjs');
require('../_virtual/_tslib.cjs');
require('sats-connect');
require('bitcoinjs-lib');
require('@dynamic-labs/wallet-connector-core');
require('@dynamic-labs/utils');
require('@dynamic-labs/wallet-book');
var fetchBtcKitConnectors = require('./utils/fetchBtcKitConnectors/fetchBtcKitConnectors.cjs');
var fetchSatsConnectConnectors = require('./utils/fetchSatsConnectConnectors/fetchSatsConnectConnectors.cjs');
var hasSatsConnectFeature = require('./utils/hasSatsConnectFeature.cjs');
var supportsSatsConnect = require('./utils/supportsSatsConnect.cjs');
var getMempoolApiUrl = require('./utils/getMempoolApiUrl.cjs');
var PhantomConnector = require('./connectors/PhantomConnector/PhantomConnector.cjs');
var OkxConnector = require('./connectors/OkxConnector/OkxConnector.cjs');
var UnisatConnector = require('./connectors/UnisatConnector/UnisatConnector.cjs');
var UnknownInjected = require('./connectors/UnknownInjected/UnknownInjected.cjs');
var FallbackBitcoinConnector = require('./connectors/FallbackBitcoinConnector/FallbackBitcoinConnector.cjs');

const BitcoinWalletConnectors = (props) => [
    ...fetchSatsConnectConnectors.fetchSatsConnectConnectors(props),
    ...fetchBtcKitConnectors.fetchBtcKitConnectors(props),
    PhantomConnector.PhantomConnector,
    OkxConnector.OkxConnector,
    UnisatConnector.UnisatConnector,
    UnknownInjected.UnknownInjectedConnector,
    FallbackBitcoinConnector.FallbackBitcoinConnector,
];

exports.BitcoinWalletConnector = BitcoinWalletConnector.BitcoinWalletConnector;
exports.fetchBtcKitConnectors = fetchBtcKitConnectors.fetchBtcKitConnectors;
exports.fetchSatsConnectConnectors = fetchSatsConnectConnectors.fetchSatsConnectConnectors;
exports.hasSatsConnectFeature = hasSatsConnectFeature.hasSatsConnectFeature;
exports.supportsSatsConnect = supportsSatsConnect.supportsSatsConnect;
exports.getMempoolApiUrl = getMempoolApiUrl.getMempoolApiUrl;
exports.BitcoinWalletConnectors = BitcoinWalletConnectors;
