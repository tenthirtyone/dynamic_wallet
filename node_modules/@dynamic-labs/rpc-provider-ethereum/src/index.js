'use client'
import { createPublicClient, http } from 'viem';
import { ChainRpcProviders, ProviderChain } from '@dynamic-labs/rpc-providers';
export * from '@dynamic-labs/rpc-providers';
import { parseEvmNetworks, getOrMapViemChain } from '@dynamic-labs/utils';

/* eslint-disable @typescript-eslint/no-namespace */
ChainRpcProviders.getEvmProviderByChainId = (config, chainId) => {
    var _a;
    const rpcProviders = ChainRpcProviders.getProviders(config);
    const provider = (_a = rpcProviders['evm']) === null || _a === void 0 ? void 0 : _a.find((provider) => provider.chainId === chainId);
    return provider;
};
ChainRpcProviders.registerEvmProviders = () => {
    ChainRpcProviders.registerChainProviders(ProviderChain.EVM, (config) => {
        const rpcProviders = {};
        if (config === null || config === void 0 ? void 0 : config.evm) {
            rpcProviders.evm = parseEvmNetworks(config.evm).map((network) => {
                var _a;
                const rpcUrl = ((_a = network.privateCustomerRpcUrls) === null || _a === void 0 ? void 0 : _a[0]) || network.rpcUrls[0];
                const provider = createPublicClient({
                    chain: getOrMapViemChain(network),
                    transport: http(rpcUrl),
                });
                return {
                    chainId: network.chainId,
                    chainName: network.name,
                    provider,
                };
            });
        }
        return rpcProviders.evm;
    });
};
